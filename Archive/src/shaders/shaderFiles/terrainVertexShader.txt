#version 400 core

layout (location = 0) in vec3 vertices;
layout (location = 1) in vec2 texCoords;
layout (location = 2) in vec3 vertexNormal;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;

uniform vec3 lightDirection;
uniform mat4 toShadowMapSpace;

out vec2 passTexCoords;
out vec3 surfaceNormal;
out vec3 lightDirect;
out vec4 shadowCoords;

void main(){
    vec4 worldPosition = transformationMatrix * vec4(vertices, 1.0f);
    shadowCoords = toShadowMapSpace * worldPosition;

    gl_Position = projectionMatrix * viewMatrix * worldPosition;
    passTexCoords = texCoords;

    surfaceNormal = (transformationMatrix * vec4(vertexNormal, 0.0)).xyz;
    lightDirect = lightDirection;
}